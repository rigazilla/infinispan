name: On PR Open or Push Do Build and Test
on:
  pull_request:
  push:
    branches:
      - main
      - 15.[0-9]+.x
      - 14.0.x
jobs:
  ci-build-test-pr:
    name: Maven Build and Test
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xmx1500m -XX:+HeapDumpOnOutOfMemoryError"
      GH_TOKEN: ${{ github.token }}
    outputs:
      server-distro-name-branch: ${{ steps.properties.outputs.infinispan_brand_prefix }}-server-${{ steps.properties.outputs.infinispan_brand_version }}
      server-distro-name-pr: ${{ steps.properties.outputs.infinispan_brand_prefix }}-server-${{ steps.properties.outputs.infinispan_brand_version }}-${{ github.event.pull_request.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - run: ./mvnw --version

      - name: Getting project properties
        run: |
            ./mvnw properties:write-project-properties -Dproperties.outputFile=mvn-write-project.properties
            cat mvn-write-project.properties | while IFS='=' read a b; do echo ${a//[-.]/_}=$b; done >> "$GITHUB_OUTPUT"
        id: properties
      - name: Maven build
        run: >
            ./mvnw -s maven-settings.xml clean install -B -e -DskipTests -Pnative
#            -pl :infinispan-component-annotations,:infinispan-logging-annotations,:infinispan-checkstyle,commons,:infinispan-defaults-maven-plugin,:infinispan-logging-processor,:infinispan-commons-spi,:infinispan-component-processor,:infinispan-commons-test,:infinispan-api,:infinispan-commons,core

      - name: Maven Test
        run: >
            ./mvnw verify -s maven-settings.xml -B -e -DrerunFailingTestsCount=2 -Dmaven.test.failure.ignore=true
            -Dansi.strip=true  -Pnative

      - name: Archive commit sha PR
        if: >
          (success() || failure()) &&
          github.event_name == 'pull_request'
        run: |
           echo -n ${{ github.event.pull_request.head.sha }} > github-sha.txt

      - name: Archive commit sha push
        if: >
          (success() || failure()) &&
          github.event_name == 'push'
        run: |
           echo -n $GITHUB_SHA > github-sha.txt

      - name: Archive surefire test report
        if: (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: surefire-test-report
          path: |
            **/surefire-reports/TEST-*.xml
            **/*.dump*
            **/hs_err_*
            github-sha.txt

# Create artifact with branch name and surefile flaky test report
      - name: Check flaky report existence
        if: success() || failure()
        id: check_flaky_report
        uses: andstor/file-existence-action@v3
        with:
          files: "**/target/*-reports*/**/TEST-*FLAKY.xml"

      - name: Archive base_ref
        if: (success() || failure()) && steps.check_flaky_report.outputs.files_exists == 'true'
        env:
          TARGET_BRANCH: ${{ github.base_ref }}
          EVENT_NAME: ${{ github.event_name }}
          EVENT_NUMBER: ${{ github.event.number }}
        run: |
          echo -n $TARGET_BRANCH > target-branch.txt
          echo -n $EVENT_NAME > event-name.txt
          echo -n $EVENT_NUMBER > event-number.txt

      - name: Archive flaky test report
        if: (success() || failure()) && steps.check_flaky_report.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: flaky-test-report
          path: |
            **/target/*-reports*/**/TEST-*FLAKY.xml
            target-branch.txt
            event_name.txt
            event_number.txt

      - name: Archive server distro ${{ steps.properties.outputs.infinispan_brand_version }}
        if: ${{github.event_name == 'push'}}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.properties.outputs.infinispan_brand_prefix }}-server-${{ steps.properties.outputs.infinispan_brand_version }}
          overwrite: true
          path: |
            distribution/target/distribution/infinispan-server*.zip

      - name: Archive PR server distro ${{ steps.properties.outputs.infinispan_brand_version }}-${{ github.event.pull_request.number }}
        if: ${{github.event_name == 'pull_request'}}
        uses: actions/upload-artifact@v4
        with:
            name: ${{ steps.properties.outputs.infinispan_brand_prefix }}-server-${{ steps.properties.outputs.infinispan_brand_version }}-${{ github.event.pull_request.number }}
            overwrite: true
            path: |
               distribution/target/distribution/infinispan-server*.zip

      - uses: ncipollo/release-action@v1
        if: ${{ github.event_name}} == 'push'
        id: create-release
        with:
          name: ${{ steps.properties.outputs.infinispan_brand_version }}-devel
          allowUpdates: true
          artifacts: distribution/target/distribution/infinispan*.zip
          tag: ${{ github.ref_name }}-devel
  images-branch:
      name: Build branch image ${{ needs.ci-build-test-pr.outputs.server-distro-name-branch }} using infinispan-image
      if: github.event_name == 'push'
      needs: ci-build-test-pr
      uses: rigazilla/infinispan-images/.github/workflows/ci-release.yml@main
      secrets: inherit
      with:
         repository: ${{ github.repository }}
         run-id: ${{ github.run_id }}
         name: ${{ needs.ci-build-test-pr.outputs.server-distro-name-branch }}
         art-name: ${{ needs.ci-build-test-pr.outputs.server-distro-name-branch }}
  images-pr:
      name: Build PR image ${{ needs.ci-build-test-pr.outputs.server-distro-name-branch }} using infinispan-image
      if: github.event_name == 'pull_request'
      needs: ci-build-test-pr
      uses: rigazilla/infinispan-images/.github/workflows/ci-release.yml@main
      secrets: inherit
      with:
         repository: ${{ github.repository }}
         run-id: ${{ github.run_id }}
         name: ${{ needs.ci-build-test-pr.outputs.server-distro-name-branch }}
         art-name: ${{ needs.ci-build-test-pr.outputs.server-distro-name-pr }}
