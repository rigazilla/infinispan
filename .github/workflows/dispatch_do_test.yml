name: On Demand Test
run-name: On Demand Test 
on:
   workflow_dispatch:
     inputs:
       run-id:
         description: 'Run ID'
         required: false
         type: string
       head-sha:
         description: 'Head SHA'
         required: true
         type: string
       head-branch:
         description: 'Head Branch'
         required: true
         type: string
       event:
         description: 'Event'
         required: true
         type: string
       modules:
         description: 'Modules to build and test, comma separated'
         required: true
         type: string

permissions:
  contents: read
  packages: read
  # Needed to write commit status
  statuses: write
  pull-requests: write

jobs:
  ci-build-test-pr:
    name: Maven Test
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xmx1500m -XX:+HeapDumpOnOutOfMemoryError"
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ".github"
          fetch-depth: 1

      - name: Setup Java
        uses: ./.github/actions/setup-java

      - name: Extract Maven Artifacts
        if: inputs.run-id != ''
        uses: ./.github/actions/extract-maven-artifacts
        with:
         run-id: ${{ inputs.run-id }}

      - name: Download Infinispan Server
        if: inputs.run-id != ''
        id: dis
        uses: ./.github/actions/download-infinispan
        with:
          run-id: ${{ inputs.run-id }}
          github-token: ${{ github.token }}

      - name: Extract Infinispan Source
        if: inputs.run-id != ''
        run: |
          mkdir test_dir && cd test_dir
          unzip ${GITHUB_WORKSPACE}/infinispan-${{ steps.dis.outputs.server-version }}-src.zip
          mv infinispan-${{ steps.dis.outputs.server-version }}-src infinispan

      - name: Maven Test
        env:
          HIBERNATE_MATRIX: '-Phibernate-matrix'
        id: maven-test
        shell: bash
        run: >
            cd test_dir/infinispan &&
            ./mvnw verify -V -B -e -DrerunFailingTestsCount=2
            -Dmaven.test.failure.ignore=true -Dansi.strip=true -Pnative,coverage $HIBERNATE_MATRIX
            -Dorg.infinispan.test.server.extension.libs=org.jacoco:org.jacoco.agent:0.8.12:runtime
            -Dgithub.action=true -pl ${{ inputs.modules }}

      - name: Archive commit sha PR
        if: >
          (success() || failure())
        env:
          COMMIT_SHA: ${{ inputs.head-sha }}
        run: |
           echo -n $COMMIT_SHA > github-sha.txt

      - name: Set sanitized modules
        if: (success() || failure())
        run: |
          SAN_MODULES=$(echo "${{ inputs.modules }}" | tr '/' '_')
          echo "SAN_MODULES=$SAN_MODULES" >> $GITHUB_ENV

      - name: Upload surefire test report
        if: (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: surefire-test-report-${{ env.SAN_MODULES }}-${{ github.run_id }}
          path: |
            test_dir/infinispan/**/target/*-reports*/**/TEST-*.xml
            !test_dir/infinispan/**/*-reports*/**/TEST-*FLAKY.xml
            !test_dir/infinispan/**/*-reports*/TEST-*RocksDB*.xml
            test_dir/infinispan/**/*.dump*
            test_dir/infinispan/**/hs_err_*
            test_dir/infinispan/jacoco/
            github-sha.txt
            pr-number.txt

# Create artifact with branch name and surefile flaky test report
      - name: Check flaky report existence
        if: success() || failure()
        id: check_flaky_report
        uses: andstor/file-existence-action@v3
        with:
          files: "test_dir/infinispan/**/target/*-reports*/**/TEST-*FLAKY.xml"

      - name: Archive base_ref
        if: (success() || failure()) && steps.check_flaky_report.outputs.files_exists == 'true'
        env:
          TARGET_BRANCH: ${{ inputs.head-sha }}
        run: |
          echo -n $TARGET_BRANCH > target-branch.txt

      - name: Upload flaky test report
        if: (success() || failure()) && steps.check_flaky_report.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: flaky-test-report-${{ env.SAN_MODULES }}-${{ github.run_id }}
          path: |
            test_dir/infinispan/**/target/*-reports*/**/TEST-*FLAKY.xml
            target-branch.txt

      - name: Upload log files
        if: (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: log-files-${{ env.SAN_MODULES }}-${{ github.run_id }}
          compression-level: 9
          path: |
            test_dir/infinispan/**/*.log
            !**/*[:"<>\*\?]*/**/*.log
            !**/*[:"<>\*\?]*.log

      - name: Publish Test Report
        env:
          GH_TOKEN: ${{ github.token }}
        if: success() || failure()
        # Waiting for https://github.com/ScaCap/action-surefire-report/pull/251
        uses: rigazilla/action-surefire-report@summary
        with:
          check_name: Test Report Result
          ignore_flaky_tests: true
          report_paths: |
            test_dir/infinispan/**/*-reports*/**/TEST-*.xml

